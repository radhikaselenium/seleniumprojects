TestNG Framework [Test Next Generation Framework]:
--------------------------------------------------
	It is a framework which is used to test the "software under test" and to obtain the result in a organized manner
	
Scenario to be automated:
-------------------------
Open the Chrome Browser 
Navigate to https://www.browserstack.com website
Click on Sign in button 
Enter the email 
Enter the password 
Click on Login button 
Wait for 5 seconds
Click on Sign out button
close the browser

using TestNG Perform the above automation for multiple users 

User 1 - sandeshhs6460@gmail.com , 12345678
User 2 - mrgarunkumar8892@gmail.com, Aru@8892

----------------------------------------------------------------------
Steps involved in installing TestNG Plug-in:
---------------------------------------------
1. In the Eclipse , click on help button in the menu bar
2. Click on Install new software 
3. In the work with text box , type https://testng.org/testng-eclipse-update-site/
4. click on add , in the name box type TestNG and in the location box type the URL [http://testng.org/testng-eclipse-update-site/]
5. click on add 
6. Once the searching process is done , it will display TestNG in the name text box 
7. click on the check box 
8. click on next and click on terms and condition 
9. click on finish

Steps involved in downloading TestNG jars:
------------------------------------------
1. Search for MVN repository in chrome browser
2. Click on First Link [https://mvnrepository.com/]
3. In search box , type TestNG, click on search 
4. Click on the first link TestNG
5. click on 6.14.3 link
6. under file section click on jar link 
7. download under 'selenium components' folder 
8. add the jar to project 

----------------------------------------------------------------------------------

Program:
--------
package com.execlr.browserstack;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.Test;

public class TestNG1
{
	WebDriver driver;
	
	@Test
	public void Credentails1()
	{
	driver = new ChromeDriver();
	driver.manage().window().maximize();
	driver.get("https://www.browserstack.com");
	driver.findElement(By.xpath("(//a[@title='Sign In'])[1]")).click();
	driver.findElement(By.xpath("//input[@id='user_email_login']")).sendKeys("sandeshhs6460@gmail.com");
	driver.findElement(By.xpath("//input[@id='user_password']")).sendKeys("12345678");
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	driver.findElement(By.xpath("//button[@id='accept-cookie-notification']")).click();
	driver.findElement(By.xpath("(//input[@type='submit'])[1]")).click();
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement b = driver.findElement(By.xpath("//button[@id='account-menu-toggle']"));
	Actions a = new Actions(driver);
	a.moveToElement(b).build().perform();
	driver.findElement(By.xpath("//a[@title='Sign out' and @id ='sign_out_link']")).click();
	driver.close();
	}
	
	@Test
	public void Credentails2()
	{
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("https://www.browserstack.com");
		driver.findElement(By.xpath("(//a[@title='Sign In'])[1]")).click();
		driver.findElement(By.xpath("//input[@id='user_email_login']")).sendKeys("mrgarunkumar8892@gmail.com");
		driver.findElement(By.xpath("//input[@id='user_password']")).sendKeys("Aru@8892");
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		driver.findElement(By.xpath("//button[@id='accept-cookie-notification']")).click();
		driver.findElement(By.xpath("(//input[@type='submit'])[1]")).click();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		WebElement b = driver.findElement(By.xpath("//button[@id='account-menu-toggle']"));
		Actions a = new Actions(driver);
		a.moveToElement(b).build().perform();
		driver.findElement(By.xpath("//a[@title='Sign out' and @id ='sign_out_link']")).click();
		driver.close();
	}
}


o/p:
-----
PASSED: Credentails2
PASSED: Credentails1

===============================================
    Default test
    Tests run: 2, Failures: 0, Skips: 0
===============================================


===============================================
Default suite
Total tests run: 2, Passes: 2, Failures: 0, Skips: 0
===============================================

---------------------------------------------------------------------------

NOTE:
-----
	--> A TestNG consists of test methods 
	--> Any method which is annotated using @Test is referred as "Test Method"
	--> A TestNG class can have any number of Test methods 
	--> A Test Method is also referred as "Test Case"
	
---------------------------------------------------------------------------	
@BeforeMethod
	--> Such methods which are annotated using @BeforeMethod will be executed before the execution of each Test Case or Test Method 
	

@AfterMethod
	--> Such methods which are annotated using @AfterMethod will be executed after the execution of each Test Case or Test Method 
	
Program:
--------
package com.execlr.browserstack;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class TestNG2
{
	WebDriver driver;
	
	@BeforeMethod
	public void beforeMethod()
	{
		System.out.println("Before Method Executed");
	}
	
	@AfterMethod
	public void afterMethod()
	{
		System.out.println("After Method Executed");
	}
	
	@Test   // TestCase 1
	public void positiveCredentails1()
	{
		System.out.println("Inside Positive Credentails 1");
	}
	@Test   // TestCase 2
	public void positiveCredentails2()
	{
		System.out.println("Inside Positive Credentails 2");
	}
}
	
	
o/p:
----
Before Method Executed
Inside Positive Credentails 1
After Method Executed
Before Method Executed
Inside Positive Credentails 2
After Method Executed
PASSED: positiveCredentails1
PASSED: positiveCredentails2

===============================================
    Default test
    Tests run: 2, Failures: 0, Skips: 0
===============================================


===============================================
Default suite
Total tests run: 2, Failures: 0, Skips: 0
==============================================
	
Program:
---------
package com.execlr.browserstack;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class TestNG3
{
	WebDriver driver;
	
	@Test   // TestCase 1
	public void positiveCredentails1()
	{
		System.out.println("Inside Positive Credentails 1");
	}
	
	@Test   // TestCase 2
	public void positiveCredentails2()
	{
		System.out.println("Inside Positive Credentails 2");
	}
	
	@Test   // TestCase 3
	public void positiveCredentails3()
	{
		System.out.println("Inside Positive Credentails 3");
	}
	
	@BeforeMethod
	public void beforeMethod()
	{
		System.out.println("Before Method Executed");
	}
	
	@AfterMethod
	public void afterMethod()
	{
		System.out.println("After Method Executed");
	}
}



o/p:
----
Before Method Executed
Inside Positive Credentails 1
After Method Executed
Before Method Executed
Inside Positive Credentails 2
After Method Executed
Before Method Executed
Inside Positive Credentails 3
After Method Executed
PASSED: positiveCredentails1
PASSED: positiveCredentails2
PASSED: positiveCredentails3

===============================================
    Default test
    Tests run: 3, Failures: 0, Skips: 0
===============================================


===============================================
Default suite
Total tests run: 3, Failures: 0, Skips: 0
===============================================

-------------------------------------------------------------------------------------
	
Program:
--------
package com.execlr.browserstack;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class TestNG4
{
	WebDriver driver;
	
	@BeforeMethod
	public void beforeMethod()
	{
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("https://www.browserstack.com");
		driver.findElement(By.xpath("(//a[@title='Sign In'])[1]")).click();
	}
	

	@AfterMethod
	public void afterMethod()
	{
		driver.close();
	}
	
	@Test
	public void Credentails1()
	{
	driver.findElement(By.xpath("//input[@id='user_email_login']")).sendKeys("sandeshhs6460@gmail.com");
	driver.findElement(By.xpath("//input[@id='user_password']")).sendKeys("12345678");
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	driver.findElement(By.xpath("//button[@id='accept-cookie-notification']")).click();
	driver.findElement(By.xpath("(//input[@type='submit'])[1]")).click();
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement b = driver.findElement(By.xpath("//button[@id='account-menu-toggle']"));
	Actions a = new Actions(driver);
	a.moveToElement(b).build().perform();
	driver.findElement(By.xpath("//a[@title='Sign out' and @id ='sign_out_link']")).click();
	
	}
	
	@Test
	public void Credentails2()
	{
		driver.findElement(By.xpath("//input[@id='user_email_login']")).sendKeys("mrgarunkumar8892@gmail.com");
		driver.findElement(By.xpath("//input[@id='user_password']")).sendKeys("Aru@8892");
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		driver.findElement(By.xpath("//button[@id='accept-cookie-notification']")).click();
		driver.findElement(By.xpath("(//input[@type='submit'])[1]")).click();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		WebElement b = driver.findElement(By.xpath("//button[@id='account-menu-toggle']"));
		Actions a = new Actions(driver);
		a.moveToElement(b).build().perform();
		driver.findElement(By.xpath("//a[@title='Sign out' and @id ='sign_out_link']")).click();
	}
}

------------------------------------------------------------------------------------------

Program:
--------
package com.execlr.browserstack;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class TestNG5
{
	WebDriver driver;
	
	@BeforeMethod
	public void beforeMethod()
	{
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("https://www.browserstack.com");
		driver.findElement(By.xpath("(//a[@title='Sign In'])[1]")).click();
	}
	

	@AfterMethod
	public void afterMethod()
	{
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		driver.findElement(By.xpath("//button[@id='accept-cookie-notification']")).click();
		driver.findElement(By.xpath("(//input[@type='submit'])[1]")).click();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		WebElement b = driver.findElement(By.xpath("//button[@id='account-menu-toggle']"));
		Actions a = new Actions(driver);
		a.moveToElement(b).build().perform();
		driver.findElement(By.xpath("//a[@title='Sign out' and @id ='sign_out_link']")).click();
		driver.close();
	}
	
	@Test
	public void Credentails1()
	{
	driver.findElement(By.xpath("//input[@id='user_email_login']")).sendKeys("sandeshhs6460@gmail.com");
	driver.findElement(By.xpath("//input[@id='user_password']")).sendKeys("12345678");
	}
	
	@Test
	public void Credentails2()
	{
		driver.findElement(By.xpath("//input[@id='user_email_login']")).sendKeys("mrgarunkumar8892@gmail.com");
		driver.findElement(By.xpath("//input[@id='user_password']")).sendKeys("Aru@8892");
		
	}
}

-----------------------------------------------------------------------------------------
	
@BeforeClass:
-------------
	--> Such methods which are created using @BeforeClass annotation would get executed "ONLY ONCE" before the execution of the before method of the current class 


@AfterClass:
------------
	--> Such methods which are created using @AfterClass annotation would get executed "ONLY ONCE" after the execution of the after method of the current class 
	
Program:
--------
package com.execlr.browserstack;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class TestNG6 
{
	WebDriver driver;
	
	@BeforeClass
	public void beforeClass()
	{
		System.out.println("Before Class Executed");
	}
	
	@AfterClass
	public void afterClass()
	{
		System.out.println("After Class Executed");
	}
	
	@BeforeMethod
	public void beforeMethod()
	{
		System.out.println("Before Method Executed");
	}
	
	@AfterMethod
	public void afterMethod()
	{
		System.out.println("After Method Executed");
	}
	
	@Test   // TestCase 1
	public void positiveCredentails1()
	{
		System.out.println("Inside Positive Credentails 1");
	}
	
	@Test   // TestCase 2
	public void positiveCredentails2()
	{
		System.out.println("Inside Positive Credentails 2");
	}

}

	
o/p:
----
Before Class Executed

Before Method Executed
Inside Positive Credentails 1
After Method Executed
Before Method Executed
Inside Positive Credentails 2
After Method Executed

After Class Executed

---------------------------------------------------------------------------------
Priorities in TestNG:
---------------------
	--> The order of execution of the test methods or test cases inside the TestNG class is based on the alphabetical order or the ASCII values 
	--> However we can change the order of execution of the test cases depending the requirements using the concept of priority 
	
Syntax:
-------
	Test(priority = priority_num)


Test Method without Priority:
------------------------------

Program:
-------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG7
{
	@Test
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	@Test
	public void b_method()
	{
		System.out.println("B method Executed");
	}
	@Test
	public void c_method()
	{
		System.out.println("C method Executed");
	}
	@Test
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	@Test
	public void e_method()
	{
		System.out.println("E method Executed");
	}
}

o/p:
----
A method Executed
B method Executed
C method Executed
D method Executed
E method Executed

----------------------------------------------------------------------------
Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG8
{
	@Test
	public void e_method()
	{
		System.out.println("E method Executed");
	}
	
	@Test
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	
	@Test
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	
	@Test
	public void c_method()
	{
		System.out.println("C method Executed");
	}
	
	
	@Test
	public void b_method()
	{
		System.out.println("B method Executed");
	}
}



o/p:
----
A method Executed
B method Executed
C method Executed
D method Executed
E method Executed
-------------------------------------------------------------------
Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG9
{
	@Test(priority = 1)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
	
	@Test(priority = 2)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	
	@Test(priority = 3)
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	
	@Test(priority = 4)
	public void c_method()
	{
		System.out.println("C method Executed");
	}
	
	
	@Test(priority = 5)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
}


o/p:
----
E method Executed
A method Executed
D method Executed
C method Executed
B method Executed

---------------------------------------------------------------------------------
Test Method with Priority:
--------------------------

Program:
--------

package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG10
{
	@Test(priority = 3)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
	
	@Test(priority = 5)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	
	@Test(priority = 2)
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	
	@Test(priority = 4)
	public void c_method()
	{
		System.out.println("C method Executed");
	}
	
	
	@Test(priority = 1)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
}

o/p:
----
B method Executed
D method Executed
E method Executed
C method Executed
A method Executed
	
------------------------------------------------------------------------------------

Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG11
{
	@Test(priority = 55)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
	
	@Test(priority = -4)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	
	@Test(priority = 24)
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	
	@Test(priority = 0)
	public void c_method()
	{
		System.out.println("C method Executed");
	}
	
	@Test(priority = 17)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
}


o/p:
----
A method Executed
C method Executed
B method Executed
D method Executed
E method Executed

-------------------------------------------------------------------------------------------

Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG12 
{
	
	@Test(priority = 5)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	@Test(priority = 3)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
	@Test(priority = 4)
	public void c_method()
	{
		System.out.println("C method Executed");
	}
	@Test(priority = 4)
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	@Test(priority = 1)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
}


o/p:
----
E method Executed
B method Executed
C method Executed
D method Executed
A method Executed
------------------------------------------------------------------------------------

package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG13 
{
	
	@Test(priority = 5)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	@Test(priority = 3)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
	@Test(priority = 4)
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	@Test(priority = 4)
	public void c_method()
	{
		System.out.println("C method Executed");
	}

	@Test(priority = 1)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
}


o/p:
---
E method Executed
B method Executed
C method Executed
D method Executed
A method Executed
----------------------------------------------------------------------------------
Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG14
{
	
	@Test(priority = 5)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	@Test(priority = 3)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
	@Test(priority = 4)
	public void c_method()
	{
		System.out.println("C-1 method Executed");
	}
	@Test(priority = 4)
	public void c_method()
	{
		System.out.println("C-2 method Executed");
	}

	@Test(priority = 1)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
}



o/p:
----
E method Executed
B method Executed
C-1 method Executed
A method Executed

--------------------------------------------------------------------------------------------
Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG15 
{
	@Test(priority = -21)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
	@Test(priority = 4)
	public void c_method()
	{
		System.out.println("E method Executed");
	}
	@Test(priority = 4)
	public void c_Method()
	{
		System.out.println("C method Executed");
	}
	@Test(priority = 4)
	public void D_method()
	{
		System.out.println("D method Executed");
	}
	@Test(priority = 0)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
}

o/p:
----
B method Executed
A method Executed
D method Executed
C method Executed
E method Executed


---------------------------------------------------------------------------------

Test Methods with Priority and Without Priority:
------------------------------------------------
	If the TestNG Class contains Test Methods with Priority and Without Priority then during the execution the highest priority will be given to such methods without priority


Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG16 
{

	@Test(priority = 5)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	@Test(priority = 3)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
	@Test
	public void c_method()
	{
		System.out.println("C method Executed");
	}
	@Test(priority = 2)
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	@Test(priority = 1)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
}

o/p:
----
C method Executed
E method Executed
D method Executed
B method Executed
A method Executed
---------------------------------------------------------------------------------

NOTE:
-----
	--> Irrespective of the method with priority & without priority always the highest priority will be given for the negative numbers

---------------------------------------------------------------------------------

Program:
--------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG17 
{
	@Test(priority = -98)
	public void a_method()
	{
		System.out.println("A method Executed");
	}
	
	@Test(priority = 45)
	public void b_method()
	{
		System.out.println("B method Executed");
	}
	
	@Test
	public void c_method()   // c - 100
	{
		System.out.println("Small Letter c method Executed");
	}
	
	@Test(priority = 2)
	public void d_method()
	{
		System.out.println("D method Executed");
	}
	
	@Test(priority = 0)
	public void e_method()
	{
		System.out.println("E method Executed");
	}
	
	@Test
	public void C_method()    // C - 67
	{
		System.out.println("Capital Letter C method Executed");
	}
}

o/p:
----
A method Executed
Capital Letter C method Executed
Small Letter c method Executed
E method Executed
D method Executed
B method Executed

------------------------------------------------------------------------------------------

TestNG Suite:
-------------
	Suite - Collection of Test Cases
	
	
	
Steps involved in creating TestNG.xml:
--------------------------------------

1. After creating the TestNG Class[Java File], right click - go to - TestNG 
2. Select Convert to TestNG 
3. Select the name for the xml file [ClassName] and click on finish 

Program:
---------
TestNG18.java:
--------------
package com.execlr.browserstack;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.Test;

public class TestNG18
{
	WebDriver driver;
	
	@Test   
	public void positiveCredentails1()
	{
		System.out.println("Inside Positive Credentails 1");
	}
	
	@Test   
	public void positiveCredentails2()
	{
		System.out.println("Inside Positive Credentails 2");
	}

}



TestNG18.xml:
--------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test thread-count="5" name="Test">
    <classes>
      <class name="com.execlr.browserstack.TestNG18"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->


o/p:
---
Inside Positive Credentails 1
Inside Positive Credentails 2

===============================================
Suite
Total tests run: 2, Failures: 0, Skips: 0
===============================================



---------------------------------------------------------------------------------------------

XML structure:
--------------
<suite>
	<test>
		<classes>
			<class>
			.
			.
		</classes>
			.
			.
			.
	</test>
		.
		.
		.
</suite>

---------------------------------------------------------------------------------------------
Program:
--------

TestNG19.java:
---------------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG19
{
	@Test   
	public void testCase1()
	{
		System.out.println("Test Case 1 is executed");
	}
	@Test   
	public void testCase2()
	{
		System.out.println("Test Case 2 is executed");
	}
	@Test   
	public void testCase3()
	{
		System.out.println("Test Case 3 is executed");
	}
	@Test   
	public void testCase4()
	{
		System.out.println("Test Case 4 is executed");
	}
	@Test   
	public void testCase5()
	{
		System.out.println("Test Case 5 is executed");
	}
}


TestNG19.xml:
-------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test thread-count="5" name="Test">
    <classes>
      <class name="com.execlr.browserstack.TestNG19"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->



o/p:
----
Test Case 1 is executed
Test Case 2 is executed
Test Case 3 is executed
Test Case 4 is executed
Test Case 5 is executed

-------------------------------------------------------------------------------------------
Include and Exclude:
--------------------

Include:
--------
	It is used to specify within the XML file to inform which are all the test cases that has to be included in the execution 
	
Exclude:
--------
	It is used to specify within the XML file to inform which are all the test cases that has to be excluded in the execution 

Program:
--------	

TestNG20.java:
---------------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG20
{
	@Test   
	public void testCase1()
	{
		System.out.println("Test Case 1 is executed");
	}
	@Test   
	public void testCase2()
	{
		System.out.println("Test Case 2 is executed");
	}
	@Test   
	public void testCase3()
	{
		System.out.println("Test Case 3 is executed");
	}
	@Test   
	public void testCase4()
	{
		System.out.println("Test Case 4 is executed");
	}
	@Test   
	public void testCase5()
	{
		System.out.println("Test Case 5 is executed");
	}

}


TestNG20.xml:
--------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test thread-count="5" name="Test">
    <classes>
      <class name="com.execlr.browserstack.TestNG20">
      
       <methods>
      		<include name = "testCase1"> </include>
      		<include name = "testCase3"> </include>
      		<include name = "testCase5"> </include>
      	</methods>
      	
      </class>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->


o/p:
----
Test Case 1 is executed
Test Case 3 is executed
Test Case 5 is executed
------------------------------------------------------------------------------------


Program:
--------	

TestNG21.java:
---------------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG21
{
	@Test   
	public void testCase1()
	{
		System.out.println("Test Case 1 is executed");
	}
	@Test   
	public void testCase2()
	{
		System.out.println("Test Case 2 is executed");
	}
	@Test   
	public void testCase3()
	{
		System.out.println("Test Case 3 is executed");
	}
	@Test   
	public void testCase4()
	{
		System.out.println("Test Case 4 is executed");
	}
	@Test   
	public void testCase5()
	{
		System.out.println("Test Case 5 is executed");
	}

}


TestNG21.xml:
--------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test thread-count="5" name="Test">
    <classes>
      <class name="com.execlr.browserstack.TestNG21">
      
       <methods>
      		<exclude name = "testCase2"> </exclude>
      		<exclude name = "testCase4"> </exclude>
      	</methods>
      	
      </class>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->


o/p:
----
Test Case 1 is executed
Test Case 3 is executed
Test Case 5 is executed
------------------------------------------------------------------------------------

Groups: 
-------
	--> It is used to group the test cases
	
	
Program:
-------
TestNG22.java:
---------------
package com.execlr.browserstack;

import org.testng.annotations.Test;

public class TestNG22 
{
	//login - 1,2,4,6
	//inbox - 3,5,7,9
	//logout - 10
	
	@Test  (groups = "login") 
	public void testCase1()
	{
		System.out.println("Test Case 1 is executed");
	}
	@Test  (groups = "login") 
	public void testCase2()
	{
		System.out.println("Test Case 2 is executed");
	}
	@Test  (groups = "inbox") 
	public void testCase3()
	{
		System.out.println("Test Case 3 is executed");
	}
	@Test  (groups = "login") 
	public void testCase4()
	{
		System.out.println("Test Case 4 is executed");
	}
	@Test   (groups = "inbox") 
	public void testCase5()
	{
		System.out.println("Test Case 5 is executed");
	}
	@Test  (groups = "login") 
	public void testCase6()
	{
		System.out.println("Test Case 6 is executed");
	}
	@Test  (groups = "inbox")  
	public void testCase7()
	{
		System.out.println("Test Case 7 is executed");
	}
	@Test   (groups = "logout") 
	public void testCase8()
	{
		System.out.println("Test Case 8 is executed");
	}
	@Test   (groups = "inbox") 
	public void testCase9()
	{
		System.out.println("Test Case 9 is executed");
	}
	@Test   (groups = "logout") 
	public void testCase10()
	{
		System.out.println("Test Case 10 is executed");
	}
}


TestNG22.xml:
-------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test thread-count="5" name="Test">
  
   <groups>
   		<run>
   			<include name="inbox"></include>
   		</run>
   </groups>
  
    <classes>
      <class name="com.execlr.browserstack.TestNG22"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->


o/p:
----
Test Case 3 is executed
Test Case 5 is executed
Test Case 7 is executed
Test Case 9 is executed
	
-----------------------------------------------------------------------------------------	

@BeforeTest and @AfterTest :
----------------------------
	--> @BeforeTest & @AfterTest is not related to the test cases or the test methods , rather it is related to the test tag present in the xml file
	--> Such methods which are annotated using BeforeTest Annotation would get executed before the execution of each test tag in the xml
	--> Such methods which are annotated using AfterTest Annotation would get executed after the execution of all the methods in each test tag in the xml


Program:
--------
TestNG23.java:
--------------
package com.execlr.browserstack;

import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class TestNG23 
{
	@Test
	public void positiveCredentails1()
	{
		System.out.println("Positive Credentails 1 is executed");
	}
	
	@Test
	public void positiveCredentails2()
	{
		System.out.println("Positive Credentails 2 is executed");
	}
	
	@BeforeMethod
	public void beforeMethod()
	{
		System.out.println("Before Method Executed");
	}
	
	@AfterMethod
	public void afterMethod()
	{
		System.out.println("After Method Executed");
	}
	
	@BeforeClass
	public void beforeClass()
	{
		System.out.println("Before Class Executed");
	}
	
	@AfterClass
	public void afterClass()
	{
		System.out.println("After Class Executed");
	}
	
	@BeforeTest
	public void beforeTest()
	{
		System.out.println("Before Test Executed");
	}
	@AfterTest
	public void afterTest()
	{
		System.out.println("After Test Executed");
	}
	
}


TestNG23.xml:
-------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test thread-count="5" name="Test">
    <classes>
      <class name="com.execlr.browserstack.TestNG23"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->


o/p:
----
Before Test Executed
Before Class Executed
Before Method Executed
Positive Credentails 1 is executed
After Method Executed
Before Method Executed
Positive Credentails 2 is executed
After Method Executed
After Class Executed
After Test Executed
	
-------------------------------------------------------------------------------------------------
	
Program:
--------
TestNG24.java:
--------------
package com.execlr.browserstack;

import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class TestNG24 
{
	@Test
	public void positiveCredentails1()
	{
		System.out.println("Positive Credentails 1 is executed");
	}
	
	@Test
	public void positiveCredentails2()
	{
		System.out.println("Positive Credentails 2 is executed");
	}
	
	@BeforeMethod
	public void beforeMethod()
	{
		System.out.println("Before Method Executed");
	}
	
	@AfterMethod
	public void afterMethod()
	{
		System.out.println("After Method Executed");
	}
	
	@BeforeClass
	public void beforeClass()
	{
		System.out.println("Before Class Executed");
	}
	
	@AfterClass
	public void afterClass()
	{
		System.out.println("After Class Executed");
	}
	
	@BeforeTest
	public void beforeTest()
	{
		System.out.println("Before Test Executed");
	}
	@AfterTest
	public void afterTest()
	{
		System.out.println("After Test Executed");
	}
	
}
	
TestNG24.xml:
-------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">

  <test thread-count="5" name="TestCase 1">
    <classes>
      <class name="autosel.TestNG21"/>
    </classes>
  </test> <!-- Test -->
  
  <test thread-count="5" name="TestCase 2">
    <classes>
      <class name="autosel.TestNG21"/>
    </classes>
  </test> <!-- Test -->
  
  <test thread-count="5" name="TestCase 3">
    <classes>
      <class name="autosel.TestNG21"/>
    </classes>
  </test> <!-- Test -->
  
</suite> <!-- Suite -->
	
	

o/p:
----
Before Test Executed
Before Class Executed
Before Method Executed
Positive Credentails 1 is executed
After Method Executed
Before Method Executed
Positive Credentails 2 is executed
After Method Executed
After Class Executed
After Test Executed

Before Test Executed
Before Class Executed
Before Method Executed
Positive Credentails 1 is executed
After Method Executed
Before Method Executed
Positive Credentails 2 is executed
After Method Executed
After Class Executed
After Test Executed

Before Test Executed
Before Class Executed
Before Method Executed
Positive Credentails 1 is executed
After Method Executed
Before Method Executed
Positive Credentails 2 is executed
After Method Executed
After Class Executed
After Test Executed

===============================================
Suite
Total tests run: 6, Passes: 6, Failures: 0, Skips: 0
===============================================

---------------------------------------------------------------------------------------




























	
	
	
	
	
	
































































































	
	
	



